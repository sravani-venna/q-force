{"ast":null,"code":"var _jsxFileName = \"/Users/vnannuri/Desktop/test/test-platform-frontend/src/pages/Dashboard/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent, Typography, Box, Chip, List, ListItem, ListItemText, ListItemIcon, CircularProgress, Button, Alert } from '@mui/material';\nimport { dashboardService, testSuiteService } from '../../services/apiService';\nimport { TrendingUp as TrendingUpIcon, TrendingDown as TrendingDownIcon, CheckCircle as CheckCircleIcon, PlayArrow as PlayArrowIcon, Code as CodeIcon, Assessment as AssessmentIcon, MergeType as GitMergeIcon, AutoAwesome as AutoAwesomeIcon } from '@mui/icons-material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\n\n// Color configuration for charts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHART_COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7c7c'];\nconst StatCard = ({\n  title,\n  value,\n  change,\n  icon,\n  color\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  sx: {\n    height: '100%'\n  },\n  children: /*#__PURE__*/_jsxDEV(CardContent, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          gutterBottom: true,\n          variant: \"overline\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            color\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), change !== undefined && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mt: 1\n          },\n          children: [change >= 0 ? /*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n            sx: {\n              color: 'success.main',\n              mr: 0.5\n            },\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(TrendingDownIcon, {\n            sx: {\n              color: 'error.main',\n              mr: 0.5\n            },\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: change >= 0 ? 'success.main' : 'error.main'\n            },\n            children: [Math.abs(change), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          color,\n          opacity: 0.7\n        },\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this);\n_c = StatCard;\nconst Dashboard = () => {\n  _s();\n  var _dashboardData$totalT, _dashboardData$covera;\n  const [dashboardData, setDashboardData] = useState(null);\n  const [testSuites, setTestSuites] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dataSource, setDataSource] = useState('api');\n\n  // Helper function to calculate test type distribution\n  const getTestTypeDistribution = () => {\n    const typeCount = {};\n    testSuites.forEach(suite => {\n      typeCount[suite.type] = (typeCount[suite.type] || 0) + 1;\n    });\n    return Object.entries(typeCount).map(([type, count], index) => ({\n      name: type,\n      value: count,\n      color: CHART_COLORS[index % CHART_COLORS.length]\n    }));\n  };\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        console.log('üöÄ Fetching dashboard data...');\n        console.log('üîë Token in localStorage:', !!localStorage.getItem('token'));\n\n        // Fetch dashboard stats and test suites in parallel\n        const [statsResponse, suitesResponse] = await Promise.all([dashboardService.getStats(), testSuiteService.getAll()]);\n        console.log('üìä Stats response:', statsResponse);\n        console.log('üìù Suites response:', suitesResponse);\n        if (statsResponse && statsResponse.success) {\n          setDashboardData(statsResponse.data);\n          setDataSource('api');\n          console.log('‚úÖ Dashboard data set from API:', statsResponse.data);\n        } else {\n          console.warn('‚ö†Ô∏è Stats response not successful:', statsResponse);\n        }\n        if (suitesResponse && suitesResponse.success) {\n          setTestSuites(suitesResponse.data);\n          setDataSource('api');\n          console.log('‚úÖ Test suites set from API:', suitesResponse.data);\n        } else {\n          console.warn('‚ö†Ô∏è Suites response not successful:', suitesResponse);\n        }\n\n        // If no data was loaded, set fallback data for demonstration\n        if (!(statsResponse !== null && statsResponse !== void 0 && statsResponse.success) && !(suitesResponse !== null && suitesResponse !== void 0 && suitesResponse.success)) {\n          console.log('üîÑ Loading fallback demo data for display...');\n          setDataSource('fallback');\n          setDashboardData({\n            totalTests: 156,\n            passedTests: 142,\n            failedTests: 8,\n            coverage: 78.5,\n            trendsData: [{\n              date: \"2024-01-01\",\n              passed: 120,\n              failed: 5,\n              coverage: 75\n            }, {\n              date: \"2024-01-02\",\n              passed: 135,\n              failed: 7,\n              coverage: 76\n            }, {\n              date: \"2024-01-03\",\n              passed: 142,\n              failed: 8,\n              coverage: 78.5\n            }]\n          });\n          setTestSuites([{\n            id: 1,\n            name: \"User Authentication Tests\",\n            type: \"UNIT\",\n            status: \"COMPLETED\",\n            coverage: 85\n          }, {\n            id: 2,\n            name: \"API Integration Tests\",\n            type: \"INTEGRATION\",\n            status: \"RUNNING\",\n            coverage: 73\n          }, {\n            id: 3,\n            name: \"E2E Checkout Flow\",\n            type: \"E2E\",\n            status: \"PENDING\",\n            coverage: 0\n          }]);\n        }\n      } catch (err) {\n        console.error('‚ùå Dashboard fetch error:', err);\n        setError(`Failed to load dashboard data: ${(err === null || err === void 0 ? void 0 : err.message) || 'Unknown error'}`);\n\n        // Load fallback data even on error\n        console.log('üîÑ Loading fallback data due to error...');\n        setDataSource('fallback');\n        setDashboardData({\n          totalTests: 156,\n          passedTests: 142,\n          failedTests: 8,\n          coverage: 78.5,\n          trendsData: [{\n            date: \"2024-01-01\",\n            passed: 120,\n            failed: 5,\n            coverage: 75\n          }, {\n            date: \"2024-01-02\",\n            passed: 135,\n            failed: 7,\n            coverage: 76\n          }, {\n            date: \"2024-01-03\",\n            passed: 142,\n            failed: 8,\n            coverage: 78.5\n          }]\n        });\n        setTestSuites([{\n          id: 1,\n          name: \"User Authentication Tests\",\n          type: \"UNIT\",\n          status: \"COMPLETED\",\n          coverage: 85\n        }, {\n          id: 2,\n          name: \"API Integration Tests\",\n          type: \"INTEGRATION\",\n          status: \"RUNNING\",\n          coverage: 73\n        }, {\n          id: 3,\n          name: \"E2E Checkout Flow\",\n          type: \"E2E\",\n          status: \"PENDING\",\n          coverage: 0\n        }]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '200px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculate additional stats from real data\n  const passRate = dashboardData ? (dashboardData.passedTests / dashboardData.totalTests * 100).toFixed(1) : '0';\n  const runningTests = testSuites.filter(suite => suite.status === 'RUNNING').length;\n  const handleRetry = () => {\n    setError(null);\n    setDataSource('api');\n    window.location.reload(); // Simple retry by reloading\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          fontWeight: 'bold',\n          mr: 2\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: dataSource === 'api' ? \"üü¢ Live API Data\" : dataSource === 'fallback' ? \"üü° Demo Data\" : \"üî¥ No Data\",\n        color: dataSource === 'api' ? \"success\" : dataSource === 'fallback' ? \"warning\" : \"error\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 3\n      },\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        size: \"small\",\n        onClick: handleRetry,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this),\n      children: [error, \" - Showing demo data instead.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Tests\",\n          value: (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$totalT = dashboardData.totalTests) === null || _dashboardData$totalT === void 0 ? void 0 : _dashboardData$totalT.toLocaleString()) || '0',\n          change: 12,\n          icon: /*#__PURE__*/_jsxDEV(CodeIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this),\n          color: \"#1976d2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Pass Rate\",\n          value: `${passRate}%`,\n          change: 2.1,\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this),\n          color: \"#2e7d32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Test Suites\",\n          value: testSuites.length,\n          change: 8,\n          icon: /*#__PURE__*/_jsxDEV(AssessmentIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this),\n          color: \"#ed6c02\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Running Tests\",\n          value: runningTests,\n          icon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this),\n          color: \"#9c27b0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Active PRs\",\n          value: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.activePRs) || 0,\n          icon: /*#__PURE__*/_jsxDEV(GitMergeIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this),\n          color: \"#1976d2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Merged PRs\",\n          value: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.mergedPRs) || 0,\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this),\n          color: \"#2e7d32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Test Suites Generated\",\n          value: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.generatedTestSuites) || 0,\n          icon: /*#__PURE__*/_jsxDEV(AutoAwesomeIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 19\n          }, this),\n          color: \"#ed6c02\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Coverage\",\n          value: `${(dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$covera = dashboardData.coverage) === null || _dashboardData$covera === void 0 ? void 0 : _dashboardData$covera.toFixed(1)) || 0}%`,\n          icon: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n            sx: {\n              fontSize: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this),\n          color: \"#9c27b0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"Test Execution Trends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.trendsData) || [],\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"passed\",\n                  stroke: \"#2e7d32\",\n                  strokeWidth: 2,\n                  dot: {\n                    fill: '#2e7d32'\n                  },\n                  name: \"Passed Tests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"failed\",\n                  stroke: \"#d32f2f\",\n                  strokeWidth: 2,\n                  dot: {\n                    fill: '#d32f2f'\n                  },\n                  name: \"Failed Tests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"Test Suite Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 300,\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: getTestTypeDistribution(),\n                  cx: \"50%\",\n                  cy: \"50%\",\n                  innerRadius: 60,\n                  outerRadius: 120,\n                  paddingAngle: 5,\n                  dataKey: \"value\",\n                  children: getTestTypeDistribution().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: entry.color\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: getTestTypeDistribution().map((type, index) => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: 12,\n                    height: 12,\n                    backgroundColor: type.color,\n                    borderRadius: '50%',\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [type.name, \": \", type.value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"Test Suites Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: testSuites.map(suite => /*#__PURE__*/_jsxDEV(ListItem, {\n                divider: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(AssessmentIcon, {\n                    color: suite.status === 'COMPLETED' ? 'success' : suite.status === 'RUNNING' ? 'primary' : 'action'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: suite.name,\n                  secondary: `Type: ${suite.type} | Coverage: ${suite.coverage}%`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  label: suite.status,\n                  color: suite.status === 'COMPLETED' ? 'success' : suite.status === 'RUNNING' ? 'primary' : 'default',\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)]\n              }, suite.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2\n              },\n              children: \"Coverage Trends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 250,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.trendsData) || [],\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  domain: [60, 100]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"coverage\",\n                  stroke: \"#2e7d32\",\n                  strokeWidth: 2,\n                  dot: {\n                    fill: '#2e7d32'\n                  },\n                  name: \"Coverage %\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.recentPRs) && dashboardData.recentPRs.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 2\n          },\n          children: \"Recent Pull Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: dashboardData.recentPRs.map((pr, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              border: 1,\n              borderColor: 'divider',\n              borderRadius: 1,\n              mb: 1,\n              bgcolor: 'background.paper'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(GitMergeIcon, {\n                color: pr.status === 'OPEN' ? 'primary' : 'success'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: [\"#\", pr.number, \" \", pr.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: pr.status,\n                  size: \"small\",\n                  color: pr.status === 'OPEN' ? 'primary' : 'success'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 23\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2,\n                  mt: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Tests: \", pr.testsGenerated]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Pass Rate: \", pr.passRate, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${pr.passRate}% Pass Rate`,\n                  size: \"small\",\n                  color: parseFloat(pr.passRate) >= 90 ? 'success' : parseFloat(pr.passRate) >= 70 ? 'warning' : 'error'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this)]\n          }, pr.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NLEm3Sk+ZbMInBHr+9OzQoxp+xg=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Box","Chip","List","ListItem","ListItemText","ListItemIcon","CircularProgress","Button","Alert","dashboardService","testSuiteService","TrendingUp","TrendingUpIcon","TrendingDown","TrendingDownIcon","CheckCircle","CheckCircleIcon","PlayArrow","PlayArrowIcon","Code","CodeIcon","Assessment","AssessmentIcon","MergeType","GitMergeIcon","AutoAwesome","AutoAwesomeIcon","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","PieChart","Pie","Cell","jsxDEV","_jsxDEV","CHART_COLORS","StatCard","title","value","change","icon","color","sx","height","children","display","justifyContent","alignItems","gutterBottom","variant","fileName","_jsxFileName","lineNumber","columnNumber","undefined","mt","mr","fontSize","Math","abs","opacity","_c","Dashboard","_s","_dashboardData$totalT","_dashboardData$covera","dashboardData","setDashboardData","testSuites","setTestSuites","loading","setLoading","error","setError","dataSource","setDataSource","getTestTypeDistribution","typeCount","forEach","suite","type","Object","entries","map","count","index","name","length","fetchDashboardData","console","log","localStorage","getItem","statsResponse","suitesResponse","Promise","all","getStats","getAll","success","data","warn","totalTests","passedTests","failedTests","coverage","trendsData","date","passed","failed","id","status","err","message","p","passRate","toFixed","runningTests","filter","handleRetry","window","location","reload","mb","fontWeight","label","size","severity","action","onClick","container","spacing","item","xs","sm","md","toLocaleString","activePRs","mergedPRs","generatedTestSuites","width","strokeDasharray","dataKey","stroke","strokeWidth","dot","fill","cx","cy","innerRadius","outerRadius","paddingAngle","entry","backgroundColor","borderRadius","divider","primary","secondary","domain","recentPRs","pr","border","borderColor","bgcolor","gap","number","testsGenerated","parseFloat","_c2","$RefreshReg$"],"sources":["/Users/vnannuri/Desktop/test/test-platform-frontend/src/pages/Dashboard/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  CircularProgress,\n  Button,\n  Alert,\n} from '@mui/material';\nimport { dashboardService, testSuiteService } from '../../services/apiService';\nimport {\n  TrendingUp as TrendingUpIcon,\n  TrendingDown as TrendingDownIcon,\n  CheckCircle as CheckCircleIcon,\n  PlayArrow as PlayArrowIcon,\n  Code as CodeIcon,\n  Assessment as AssessmentIcon,\n  MergeType as GitMergeIcon,\n  AutoAwesome as AutoAwesomeIcon,\n} from '@mui/icons-material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\n\n// Color configuration for charts\nconst CHART_COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7c7c'];\n\nconst StatCard: React.FC<{\n  title: string;\n  value: string | number;\n  change?: number;\n  icon: React.ReactNode;\n  color: string;\n}> = ({ title, value, change, icon, color }) => (\n  <Card sx={{ height: '100%' }}>\n    <CardContent>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n        <Box>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"overline\">\n            {title}\n          </Typography>\n          <Typography variant=\"h4\" sx={{ color }}>\n            {value}\n          </Typography>\n          {change !== undefined && (\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n              {change >= 0 ? (\n                <TrendingUpIcon sx={{ color: 'success.main', mr: 0.5 }} fontSize=\"small\" />\n              ) : (\n                <TrendingDownIcon sx={{ color: 'error.main', mr: 0.5 }} fontSize=\"small\" />\n              )}\n              <Typography\n                variant=\"body2\"\n                sx={{ color: change >= 0 ? 'success.main' : 'error.main' }}\n              >\n                {Math.abs(change)}%\n              </Typography>\n            </Box>\n          )}\n        </Box>\n        <Box sx={{ color, opacity: 0.7 }}>\n          {icon}\n        </Box>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nconst Dashboard: React.FC = () => {\n  const [dashboardData, setDashboardData] = useState<any>(null);\n  const [testSuites, setTestSuites] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [dataSource, setDataSource] = useState<'api' | 'fallback'>('api');\n\n  // Helper function to calculate test type distribution\n  const getTestTypeDistribution = () => {\n    const typeCount: { [key: string]: number } = {};\n    testSuites.forEach(suite => {\n      typeCount[suite.type] = (typeCount[suite.type] || 0) + 1;\n    });\n\n    return Object.entries(typeCount).map(([type, count], index) => ({\n      name: type,\n      value: count,\n      color: CHART_COLORS[index % CHART_COLORS.length]\n    }));\n  };\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setLoading(true);\n        console.log('üöÄ Fetching dashboard data...');\n        console.log('üîë Token in localStorage:', !!localStorage.getItem('token'));\n        \n        // Fetch dashboard stats and test suites in parallel\n        const [statsResponse, suitesResponse] = await Promise.all([\n          dashboardService.getStats(),\n          testSuiteService.getAll()\n        ]);\n\n        console.log('üìä Stats response:', statsResponse);\n        console.log('üìù Suites response:', suitesResponse);\n\n        if (statsResponse && statsResponse.success) {\n          setDashboardData(statsResponse.data);\n          setDataSource('api');\n          console.log('‚úÖ Dashboard data set from API:', statsResponse.data);\n        } else {\n          console.warn('‚ö†Ô∏è Stats response not successful:', statsResponse);\n        }\n        \n        if (suitesResponse && suitesResponse.success) {\n          setTestSuites(suitesResponse.data);\n          setDataSource('api');\n          console.log('‚úÖ Test suites set from API:', suitesResponse.data);\n        } else {\n          console.warn('‚ö†Ô∏è Suites response not successful:', suitesResponse);\n        }\n\n        // If no data was loaded, set fallback data for demonstration\n        if (!statsResponse?.success && !suitesResponse?.success) {\n          console.log('üîÑ Loading fallback demo data for display...');\n          setDataSource('fallback');\n          setDashboardData({\n            totalTests: 156,\n            passedTests: 142,\n            failedTests: 8,\n            coverage: 78.5,\n            trendsData: [\n              { date: \"2024-01-01\", passed: 120, failed: 5, coverage: 75 },\n              { date: \"2024-01-02\", passed: 135, failed: 7, coverage: 76 },\n              { date: \"2024-01-03\", passed: 142, failed: 8, coverage: 78.5 }\n            ]\n          });\n          setTestSuites([\n            { id: 1, name: \"User Authentication Tests\", type: \"UNIT\", status: \"COMPLETED\", coverage: 85 },\n            { id: 2, name: \"API Integration Tests\", type: \"INTEGRATION\", status: \"RUNNING\", coverage: 73 },\n            { id: 3, name: \"E2E Checkout Flow\", type: \"E2E\", status: \"PENDING\", coverage: 0 }\n          ]);\n        }\n      } catch (err: any) {\n        console.error('‚ùå Dashboard fetch error:', err);\n        setError(`Failed to load dashboard data: ${err?.message || 'Unknown error'}`);\n        \n        // Load fallback data even on error\n        console.log('üîÑ Loading fallback data due to error...');\n        setDataSource('fallback');\n        setDashboardData({\n          totalTests: 156,\n          passedTests: 142,\n          failedTests: 8,\n          coverage: 78.5,\n          trendsData: [\n            { date: \"2024-01-01\", passed: 120, failed: 5, coverage: 75 },\n            { date: \"2024-01-02\", passed: 135, failed: 7, coverage: 76 },\n            { date: \"2024-01-03\", passed: 142, failed: 8, coverage: 78.5 }\n          ]\n        });\n        setTestSuites([\n          { id: 1, name: \"User Authentication Tests\", type: \"UNIT\", status: \"COMPLETED\", coverage: 85 },\n          { id: 2, name: \"API Integration Tests\", type: \"INTEGRATION\", status: \"RUNNING\", coverage: 73 },\n          { id: 3, name: \"E2E Checkout Flow\", type: \"E2E\", status: \"PENDING\", coverage: 0 }\n        ]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  // Calculate additional stats from real data\n  const passRate = dashboardData ? \n    ((dashboardData.passedTests / dashboardData.totalTests) * 100).toFixed(1) : '0';\n  \n  const runningTests = testSuites.filter(suite => suite.status === 'RUNNING').length;\n\n  const handleRetry = () => {\n    setError(null);\n    setDataSource('api');\n    window.location.reload(); // Simple retry by reloading\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mr: 2 }}>\n          Dashboard\n        </Typography>\n        <Chip \n          label={\n            dataSource === 'api' ? \"üü¢ Live API Data\" : \n            dataSource === 'fallback' ? \"üü° Demo Data\" : \n            \"üî¥ No Data\"\n          } \n          color={\n            dataSource === 'api' ? \"success\" : \n            dataSource === 'fallback' ? \"warning\" : \n            \"error\"\n          }\n          size=\"small\"\n        />\n      </Box>\n\n      {/* Error Display and Retry */}\n      {error && (\n        <Alert \n          severity=\"warning\" \n          sx={{ mb: 3 }}\n          action={\n            <Button color=\"inherit\" size=\"small\" onClick={handleRetry}>\n              Retry\n            </Button>\n          }\n        >\n          {error} - Showing demo data instead.\n        </Alert>\n      )}\n\n      {/* Statistics Cards */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Total Tests\"\n            value={dashboardData?.totalTests?.toLocaleString() || '0'}\n            change={12}\n            icon={<CodeIcon sx={{ fontSize: 40 }} />}\n            color=\"#1976d2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Pass Rate\"\n            value={`${passRate}%`}\n            change={2.1}\n            icon={<CheckCircleIcon sx={{ fontSize: 40 }} />}\n            color=\"#2e7d32\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Test Suites\"\n            value={testSuites.length}\n            change={8}\n            icon={<AssessmentIcon sx={{ fontSize: 40 }} />}\n            color=\"#ed6c02\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Running Tests\"\n            value={runningTests}\n            icon={<PlayArrowIcon sx={{ fontSize: 40 }} />}\n            color=\"#9c27b0\"\n          />\n        </Grid>\n      </Grid>\n\n      {/* PR Metrics Row */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Active PRs\"\n            value={dashboardData?.activePRs || 0}\n            icon={<GitMergeIcon sx={{ fontSize: 40 }} />}\n            color=\"#1976d2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Merged PRs\"\n            value={dashboardData?.mergedPRs || 0}\n            icon={<CheckCircleIcon sx={{ fontSize: 40 }} />}\n            color=\"#2e7d32\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Test Suites Generated\"\n            value={dashboardData?.generatedTestSuites || 0}\n            icon={<AutoAwesomeIcon sx={{ fontSize: 40 }} />}\n            color=\"#ed6c02\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Coverage\"\n            value={`${dashboardData?.coverage?.toFixed(1) || 0}%`}\n            icon={<TrendingUpIcon sx={{ fontSize: 40 }} />}\n            color=\"#9c27b0\"\n          />\n        </Grid>\n      </Grid>\n\n      {/* Charts */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} md={8}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                Test Execution Trends\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={dashboardData?.trendsData || []}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"passed\"\n                    stroke=\"#2e7d32\"\n                    strokeWidth={2}\n                    dot={{ fill: '#2e7d32' }}\n                    name=\"Passed Tests\"\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"failed\"\n                    stroke=\"#d32f2f\"\n                    strokeWidth={2}\n                    dot={{ fill: '#d32f2f' }}\n                    name=\"Failed Tests\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                Test Suite Types\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <PieChart>\n                  <Pie\n                    data={getTestTypeDistribution()}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    innerRadius={60}\n                    outerRadius={120}\n                    paddingAngle={5}\n                    dataKey=\"value\"\n                  >\n                    {getTestTypeDistribution().map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n              <Box sx={{ mt: 2 }}>\n                {getTestTypeDistribution().map((type: any, index: number) => (\n                  <Box key={index} sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                    <Box\n                      sx={{\n                        width: 12,\n                        height: 12,\n                        backgroundColor: type.color,\n                        borderRadius: '50%',\n                        mr: 1,\n                      }}\n                    />\n                    <Typography variant=\"body2\">\n                      {type.name}: {type.value}\n                    </Typography>\n                  </Box>\n                ))}\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Recent Activities */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                Test Suites Status\n              </Typography>\n              <List>\n                {testSuites.map((suite) => (\n                  <ListItem key={suite.id} divider>\n                    <ListItemIcon>\n                      <AssessmentIcon \n                        color={suite.status === 'COMPLETED' ? 'success' : \n                               suite.status === 'RUNNING' ? 'primary' : 'action'} \n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={suite.name}\n                      secondary={`Type: ${suite.type} | Coverage: ${suite.coverage}%`}\n                    />\n                    <Chip\n                      size=\"small\"\n                      label={suite.status}\n                      color={suite.status === 'COMPLETED' ? 'success' : \n                             suite.status === 'RUNNING' ? 'primary' : 'default'}\n                      variant=\"outlined\"\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                Coverage Trends\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <LineChart data={dashboardData?.trendsData || []}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis domain={[60, 100]} />\n                  <Tooltip />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"coverage\"\n                    stroke=\"#2e7d32\"\n                    strokeWidth={2}\n                    dot={{ fill: '#2e7d32' }}\n                    name=\"Coverage %\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Recent PRs Section */}\n      {dashboardData?.recentPRs && dashboardData.recentPRs.length > 0 && (\n        <Card sx={{ mt: 3 }}>\n          <CardContent>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\n              Recent Pull Requests\n            </Typography>\n            <List>\n              {dashboardData.recentPRs.map((pr: any, index: number) => (\n                <ListItem\n                  key={pr.id}\n                  sx={{\n                    border: 1,\n                    borderColor: 'divider',\n                    borderRadius: 1,\n                    mb: 1,\n                    bgcolor: 'background.paper'\n                  }}\n                >\n                  <ListItemIcon>\n                    <GitMergeIcon color={pr.status === 'OPEN' ? 'primary' : 'success'} />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n                          #{pr.number} {pr.title}\n                        </Typography>\n                        <Chip\n                          label={pr.status}\n                          size=\"small\"\n                          color={pr.status === 'OPEN' ? 'primary' : 'success'}\n                        />\n                      </Box>\n                    }\n                    secondary={\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mt: 0.5 }}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Tests: {pr.testsGenerated}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Pass Rate: {pr.passRate}%\n                        </Typography>\n                        <Chip\n                          label={`${pr.passRate}% Pass Rate`}\n                          size=\"small\"\n                          color={parseFloat(pr.passRate) >= 90 ? 'success' : parseFloat(pr.passRate) >= 70 ? 'warning' : 'error'}\n                        />\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}