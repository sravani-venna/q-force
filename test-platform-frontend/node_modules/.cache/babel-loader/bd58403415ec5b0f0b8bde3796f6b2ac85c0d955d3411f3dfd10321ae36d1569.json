{"ast":null,"code":"var _jsxFileName = \"/Users/vnannuri/Desktop/test/test-platform-frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const isAuthenticated = !!user;\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          try {\n            var _userData$userId, _userData$email;\n            // Parse user data from token (simple base64 decoding)\n            const userData = JSON.parse(atob(token));\n            setUser({\n              id: ((_userData$userId = userData.userId) === null || _userData$userId === void 0 ? void 0 : _userData$userId.toString()) || '1',\n              username: ((_userData$email = userData.email) === null || _userData$email === void 0 ? void 0 : _userData$email.split('@')[0]) || 'admin',\n              email: userData.email || 'admin@testplatform.com',\n              firstName: 'Admin',\n              lastName: 'User',\n              role: 'ADMIN',\n              permissions: ['CREATE_TESTS', 'EXECUTE_TESTS', 'VIEW_REPORTS', 'VIEW_PRS', 'MANAGE_USERS']\n            });\n          } catch {\n            // If token parsing fails, clear it\n            localStorage.removeItem('token');\n          }\n        }\n      } catch (error) {\n        console.error('Failed to initialize auth:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(email, password);\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await authService.register(userData);\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  const updateUser = userData => {\n    if (user) {\n      setUser({\n        ...user,\n        ...userData\n      });\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","initializeAuth","token","localStorage","getItem","_userData$userId","_userData$email","userData","JSON","parse","atob","id","userId","toString","username","email","split","firstName","lastName","role","permissions","removeItem","error","console","login","password","response","setItem","register","logout","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vnannuri/Desktop/test/test-platform-frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/authService';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: string;\n  permissions: string[];\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: RegisterData) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n}\n\ninterface RegisterData {\n  username: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const isAuthenticated = !!user;\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          try {\n            // Parse user data from token (simple base64 decoding)\n            const userData = JSON.parse(atob(token));\n            setUser({\n              id: userData.userId?.toString() || '1',\n              username: userData.email?.split('@')[0] || 'admin',\n              email: userData.email || 'admin@testplatform.com',\n              firstName: 'Admin',\n              lastName: 'User',\n              role: 'ADMIN',\n              permissions: ['CREATE_TESTS', 'EXECUTE_TESTS', 'VIEW_REPORTS', 'VIEW_PRS', 'MANAGE_USERS']\n            });\n          } catch {\n            // If token parsing fails, clear it\n            localStorage.removeItem('token');\n          }\n        }\n      } catch (error) {\n        console.error('Failed to initialize auth:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(email, password);\n      \n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      setLoading(true);\n      const response = await authService.register(userData);\n      \n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    if (user) {\n      setUser({ ...user, ...userData });\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}